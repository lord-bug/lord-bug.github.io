[ { "title": "El Camino Recto - 1. Explicación del proyecto", "url": "/posts/el-camino-recto-1/", "categories": "Programacion, Linux, El Camino Recto, Frontend, Backend", "tags": "linux, frontend, backend, proyecto, web", "date": "2022-07-28 00:00:00 +0200", "snippet": "Voy a comenzar un camino, que me va a llevar a uno de estos dos lugares: a mi mejor nivel como programador, o a la oscuridad del Síndrome del Impostor más bestia que haya sufrido nunca. Antecedentes El Proyecto Linux Herramientas de Desarrollo Frontend BackendAntecedentesSiempre he sido una persona tremendamente poco constante y con mucha facilidad para divagar y distraerme. Desde que tengo uso de razón me pasa, y por supuesto, también me ha afectado a mi vida “informática”.Esto, me ha llevado a diversas situaciones personales, como la falta de salida laboral en el pasado, una tremenda sensación de ansiedad incrementada con el auge de los “instadevs” (algún día hablaré de este fenómeno), y por supuesto, nuestro viejo conocido, el síndrome del impostor. Por eso, y de una vez por todas, he decidido trazar un itinerario de aprendizaje que me permita centrarme de una vez por todas, a base de poco estudio y mucha práctica, en mejorar mis habilidades y, sobre todo, sentirme seguro cuando trabajo o hablo con colegas de profesión.El nombre creo que es bastante explicativo, un camino de aprendizaje recto, sin desvíos ni distracciones.El ProyectoEl proyecto, en su propia concepción, es bastante sencillo: marca una o varias tecnologías que quieras aprender, busca y ordena los recursos, y comienza. Punto.La complicación puede venir del hecho de saber que quieres aprender, y digo en vez de necesitas, porque creo que el primer paso para aumentar tu motivación es el querer, no sentirte obligado.Voy a dividir mis topics de aprendizaje y práctica en cuatro apartados: Linux Herramientas de desarrollo Frontend BackendLo importante es que esté todo relacionado, compartimentar lo menos posible entre categorías, dado que así, teniendo la necesidad de usar unas para aprender otras, la retroalimentación finalizará el trabajo.Paso a explicar cada punto en profundidad.LinuxVoy a usar Linux para este camino. Mis razones son muy sencillas: Va a permitirme aprender un sistema operativo que es muy usado en la industria, en diversos ámbitos. Voy a poder enfocarme más, dado que la cantidad de software de entretenimiento es mucho menor que en Windows. Quiero centrar mi camino por la via Open Source lo más posible, por lo tanto, empezar por un sistema operativo que sigue esta filosofía me parece lo más correcto.En próximos días voy a explicar que voy a usar, donde y el motivo de todo, estad atentos a futuros posts.Herramientas de DesarrolloEste es un tema que me anima mucho a seguir este camino, y a la vez me aterra; básicamente, cuando digo herramientas, quiero decir las dos cosas mas intimidantes del mundo Dev: Vim y la Terminal.No solo voy a centrarme en aprender Vim (Neovim) y los comandos de terminal más básicos y usados de Linux, si no que voy a procurar aprender a customizar ambas herramientas para que se ajusten más a mis necesidades y, por que no decirlo, que se vean bien.FrontendAquí es donde, en vez de ir a más, voy a ir a menos. En vez de hacer lo que hace todo el mundo, que es lanzarme como un poseso a aprender lo que está de moda (React, Vue, Svelte, TailwindCSS…), voy a dar un paso atrás y voy a mantenerme en la santisima trinidad de HTML, CSS (Sass) y Javascript, aunque voy a añadir la tecnología JSF.¿Porqué JSF? Pues porque es la tecnología que uso ahora mismo en mi trabajo, y soy un total inexperto con ella.Pero.. ¿no dijiste que querías aprender lo que quisieras en vez de lo que necesitaras? Si, es cierto, pero es que ahora mismo estoy en un trabajo que me motiva, y usar Java (de lo que hablaré después) y JSF, después de más de una década de trabajar en Cobol, para mi es una etapa laboralmente excitante y quiero llegar a un alto nivel.BackendEste punto ha sido, sin duda, el más complicado de todos. A pesar de sentir un tremendo interés en Python, Rust o Go!, he decidido mantenerme con Java. ¿Motivo? Me gusta trabajar con Java, y quiero subir de nivel en mi trabajo.A pesar de que voy a centrar mis esfuerzos en Java, no va a ser lo único que aprenda o profundice, dado que tengo varios proyectos en mente (tener proyectos personales lo veo VITAL para mantener la motivación en el aprendizaje) que necesitan usar otros dos lenguajes: Javascript y Lua.Me gustaría explicar más en profundidad mis motivos, pero creo que este post se está quedando largo.&lt;hr/&gt;En próximos posts iré desgranando cada parte poco a poco, para poder explicarme mejor y apuntar a los objetivos concretos.Espero que estos renglones sean capaces de, si no motivaros a hacer algo parecido, si a motivaros para cualquier tarea, más grande o más pequeña.Lord Bug." }, { "title": "El programador que no programa", "url": "/posts/el-programador-que-no-programa/", "categories": "Programacion, Tecnología", "tags": "jekyll, programacion, tecnologia, blog", "date": "2022-07-20 00:00:00 +0200", "snippet": "El motivo por el que uso Jekyll Antecedentes Jekyll Cacharreando ConclusionesAntecedentesNo todos los programadores sabemos de todo.Muchas veces tiendo a comparar nuestro oficio con la medicina, en cuanto a especialización se refiere. ¿Tu crees que un traumatologo sabría hacer un transplante de corazón?Pues lo mismo los programadores. Yo llevo toda mi vida trabajando en el Backend de las cosas. ¿que pasa cuando uno de nosotros necesita una página web?Pues una de dos: o te haces un bootcamp de desarrollador web full stack tope chachi guai (gratuito o no), lo cual lleva su tiempo, o utilizas algo prefabricado. Algún día daré mi opinión sobre esto de ser Full Stack y las modas. JekyllCuando me planteé la creación de este blog, quería algo que fuera sencillo, minimalista y sobre todo, fácil de mantener y de hostear, por lo que descubrí los blogs estáticos, cuyo contenido era actualizado mediante ficheros en lenguaje Markdown.Realmente pensaba que había descubierto algo perfecto, dado que eliminaba de un plumazo bastantes problemas (buscar hosting con BBDD, los tiempos de carga…), hasta que empecé a ver tutoriales y me di cuenta que había que controlar de tecnologías como React o NextJs para llevar esto a cabo.A pesar de todo, tenía las mismas ganas de tener un blogspot o un wordpress que de sentarme encima de un cactus, por lo que adapté mi búsqueda un poco y encontré mi Santo Grial, Jekyll. Jekyll es un generador de webs estáticas, ideal para crear blogs o portafolios con el mínimo esfuerzo. Está basado en Ruby, aunque no es necesario saber este lenguaje para ponerlo en funcionamiento (yo no tengo ni idea de Ruby).Acepta plugins y sobre todo, temas hechos por la comunidad, por lo que tampoco tienes porqué saber nada de HTML y CSS (aunque para incrustar según qué código, te vendría muy bien alguna noción básica. Nada que no se pueda googlear).¿Y para hostear? Pues nada mejor ni más fácil que usar Github Pages. El sistema está preparado para ello y (dependiendo del tema que uses), te bastará con hacer un push de tus cambios en Github, que el se encargará solito de publicar las actualizaciones.CacharreandoNo voy a darmelas de experto en este tema. Os voy a hacer un favor mucho mayor, que es dejaros el vídeo que yo mismo usé para instalarlo todo. Os recomiendo seguir los pasos al pie de la letra, al menos si queréis usar el tema que hemos usado el creador del video y yo. Tengo la enorme suerte de que el empleado en el tutorial es el que más me gusta de todos los que vi disponibles.Hay varios factores a tener en cuenta: Recomiendo usar Linux, o bien de manera nativa o bien mediante WSL en Windows 10/11 (es mi caso). Haz caso cuando dicen que tienes que nombrar el repositorio como lo tienes que llamar, es vital. Yo fuí de listo y tuve que empezar todo desde cero porque se me rompió todo a la hora de publicar. Si usas WSL como yo, te recomiendo usar un IDE con entorno gráfico como VSCode, más que nada porque si vas a usar imágenes u otros recursos, podrás arrastrarlos a las carpetas directamente desde tu sistema Windows, y así se pegaran en tu sistema Linux sin hacer muchos malabares.ConclusionesSi estás leyendo este artículo, significa que, en líneas generales, estoy contento con este sistema de blogging. No es que sea un sistema perfecto, pero si que puedes tener algo bastante decente con pocos conocimientos y empleando, según tu nivel, una cantidad de tiempo razonable.Jekyll tiene cosas malas, por supuesto, como por ejemplo el hecho de que incrustar videos de Youtube es bastante cutre, o que te arriesgas como yo a tener un blog que se parece a muchisimos otros debido al uso de temas prefabricados.Pero si eres de esa gente que antepone el contenido al contenedor, tienes prisa por expresarte o realmente el desarrollo full stack no es para ti, te lo recomiendo.Lord Bug." }, { "title": "Bienvenid@ a mi Reino", "url": "/posts/bienvenida/", "categories": "General", "tags": "presentacion", "date": "2022-07-18 00:00:00 +0200", "snippet": "El Reino de los Errores y el Desconcierto te esperaBueno… igual me he pasado de tramático, ¿verdad?No obstante, quiero darte la bienvenida, internauta, a este mi espacio personal, donde procuraré volcar todo lo que atormenta mi alma de programador en palabras.Hace ya más de diez años que tome en una mano la espada del código, y en la otra el escudo del depurador como forma de vida, y nunca he mirado hacia atrás. Durante este trayecto, he aprendido muchas cosas, y he reflexionado sobre nuestra profesión, tanto lo que se ve como lo que no.Quiero ofrecer al mundo mi visión sobre ello. No puedo prometer que te guste lo que leas, pero si que te puedo asegurar que será escrito desde la sinceridad y la experiencia.Sin más me despido. Espero que disfrutes tu estancia.Lord Bug." } ]
